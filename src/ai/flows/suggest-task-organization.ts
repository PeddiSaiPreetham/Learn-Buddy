// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Analyzes existing tasks and suggests an organization strategy.
 *
 * - suggestTaskOrganization - A function that handles the task organization suggestion process.
 * - SuggestTaskOrganizationInput - The input type for the suggestTaskOrganization function.
 * - SuggestTaskOrganizationOutput - The return type for the suggestTaskOrganization function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestTaskOrganizationInputSchema = z.object({
  tasks: z
    .array(z.string())
    .describe('A list of tasks to be organized.'),
});
export type SuggestTaskOrganizationInput = z.infer<typeof SuggestTaskOrganizationInputSchema>;

const SuggestTaskOrganizationOutputSchema = z.object({
  suggestion: z
    .string()
    .describe('A suggestion for organizing the tasks, including categories or priorities.'),
});
export type SuggestTaskOrganizationOutput = z.infer<typeof SuggestTaskOrganizationOutputSchema>;

export async function suggestTaskOrganization(input: SuggestTaskOrganizationInput): Promise<SuggestTaskOrganizationOutput> {
  return suggestTaskOrganizationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestTaskOrganizationPrompt',
  input: {schema: SuggestTaskOrganizationInputSchema},
  output: {schema: SuggestTaskOrganizationOutputSchema},
  prompt: `You are an expert in task management. Analyze the following tasks and suggest an organization strategy, including categories or priorities.

Tasks:
{{#each tasks}}- {{{this}}}
{{/each}}

Suggestion: `,
});

const suggestTaskOrganizationFlow = ai.defineFlow(
  {
    name: 'suggestTaskOrganizationFlow',
    inputSchema: SuggestTaskOrganizationInputSchema,
    outputSchema: SuggestTaskOrganizationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
